name: Vale Lint

on:
  pull_request:
    paths:
      - '**/*.md'

jobs:
  vale:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history so we can access all commits

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get changed files
      id: changed-files
      run: |
        BASE_SHA=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
        CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }} -- '*.md')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        echo "::set-output name=files::$(echo \"$CHANGED_FILES\" | jq -R -s -c 'split("\n")[:-1]')"

    - name: Print Changed Files
      run: echo $CHANGED_FILES

    - name: Install Vale
      run: |
        VALE_VERSION=$(curl --silent "https://api.github.com/repos/errata-ai/vale/releases/latest" | jq -r .tag_name)
        curl -sSfL "https://github.com/errata-ai/vale/releases/download/${VALE_VERSION}/vale_${VALE_VERSION}_Linux_64-bit.tar.gz" -o vale.tar.gz
        tar -xzf vale.tar.gz
        sudo mv vale /usr/local/bin/

    - name: Install Reviewdog
      uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest

    - name: Run Vale and Generate Suggestions
      run: |
        for file in $(echo ${{ steps.changed-files.outputs.files }} | jq -r '.[]'); do
          ./vale --output=line $file > vale_output.patch
          if [ -s vale_output.patch ]; then
            cat vale_output.patch
            reviewdog -f=diff -name="Vale Suggestions" -reporter=github-pr-review -level=warning -filter-mode=diff_context < vale_output.patch
          fi
        done
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.SNIPPET_VALIDATION }}

    - name: Run Vale with Code Suggester
      uses: reviewdog/action-suggester@v1
      with:
        github_token: ${{ secrets.SNIPPET_VALIDATION }}
        tool_name: Vale
        level: "warning"
        filter_mode: "diff_context"
        fail_on_error: "false"
        reviewdog_flags: ""
        cleanup: "true"
