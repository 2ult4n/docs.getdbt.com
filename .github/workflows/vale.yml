name: Lint and suggest

on:
  pull_request:
    paths:
      - '**/*.md'

jobs:
  vale: # Vale linting job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history so we can access all commits

    - name: Install Vale
      uses: errata-ai/vale-action@v2

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get changed files
      id: changed-files
      run: |
        BASE_SHA=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
        CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }} -- '*.md')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        echo "::set-output name=files::$(echo $CHANGED_FILES | jq -R -s -c 'split("\n")[:-1]')"

    - name: Print Changed Files
      run: echo $CHANGED_FILES

    - name: Run Vale on changed files
      run: |
        for file in $(echo ${{ steps.changed-files.outputs.files }} | jq -r '.[]'); do
          echo "Running Vale on $file"
          vale --output=JSON $file > "vale_output_${file//\//_}.json"
          vale --output=edit $file > "vale_output_${file//\//_}_edit.md"
        done
        echo "Vale outputs:"
        ls -l

    - name: Apply Vale edits
      run: |
        for file in $(echo ${{ steps.changed-files.outputs.files }} | jq -r '.[]'); do
          mv $file "${file}.original"
          mv "vale_output_${file//\//_}_edit.md" $file
        done
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}

    - name: Upload corrected files
      uses: actions/upload-artifact@v3
      with:
        name: corrected-files
        path: '*.md'

  suggest: # Reviewdog suggestion job
    runs-on: ubuntu-latest
    needs: vale # This ensures the suggest job runs after the vale job

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download corrected files
      uses: actions/download-artifact@v3
      with:
        name: corrected-files

    - name: List downloaded files
      run: ls -l

    - name: Run Reviewdog Suggestion Action
      uses: reviewdog/action-suggester@v1
      with:
        github_token: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
        tool_name: Vale
        level: "warning"
        filter_mode: "diff_context"
        fail_on_error: "false"
        reviewdog_flags: ""
        cleanup: "true"

    - name: Run Reviewdog with corrected files
      run: |
        for file in $(ls *.md.original); do
          original="${file}"
          corrected="${file%.original}"
          diff_output=$(diff -u "$original" "$corrected")
          if [[ -n "$diff_output" ]]; then
            echo "$diff_output" | reviewdog -f=diff -name="Vale" -reporter=github-pr-review -level=warning -filter-mode=nofilter
          fi
        done
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
