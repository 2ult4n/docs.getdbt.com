name: Lint and suggest

on:
  pull_request:
    paths:
      - '**/*.md'

permissions:
  contents: read
  pull-requests: write

jobs:
  vale: # Vale linting job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history so we can access all commits

    - name: Install Vale
      uses: errata-ai/vale-action@reviewdog
      with:
        reporter: github-pr-review

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get all changed markdown files
      id: changed-markdown-files
      uses: tj-actions/changed-files@v44
      with:
        # Avoid using single or double quotes for multiline patterns
        files: |
           **.md

    - name: List all changed files markdown files
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done

    - name: Run Vale on changed files
      run: |
        for file in ${{ env.ALL_CHANGED_FILES }}; do
          echo "Running Vale on $file"
          vale --output=JSON $file > "vale_output_${file//\//_}.json"
          vale --output=edit $file > "vale_output_${file//\//_}_edit.md"
        done
        echo "Vale outputs:"
        ls -l
  
    - name: Process Vale outputs with Reviewdog
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      run: |
        for file in vale_output_*_edit.md; do
          cat "$file" | reviewdog -f=diff -name=vale -reporter=github-pr-review
        done

    - name: Install reviewdog
      run: |
        curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

    - name: Suggest changes from Vale
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: vale
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}

