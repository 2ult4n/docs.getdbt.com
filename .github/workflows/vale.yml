name: Lint and Suggest

on:
  pull_request:
    paths:
      - '**/*.md'

jobs:
  vale:
    name: Vale Markdown Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vale
        uses: errata-ai/vale-action@v2
        with:
          version: 2.17.0
          files: all
          reporter: github-pr-check
          fail_on_error: true

      - name: Install Reviewdog
        run: |
          curl -fSL https://github.com/reviewdog/reviewdog/releases/download/v0.13.0/reviewdog_linux_amd64 -o /tmp/reviewdog
          chmod +x /tmp/reviewdog
          sudo mv /tmp/reviewdog /usr/local/bin/

      - name: Run Vale on changed files
        id: vale
        run: |
          BASE_SHA=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
          CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }} -- '*.md')
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "CHANGED_FILES=$(echo $CHANGED_FILES | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_ENV

          for file in ${{ env.CHANGED_FILES }}; do
            echo "Running Vale on $file"
            vale --output=JSON $file > "vale_output_${file//\//_}.json"
            vale --output=edit $file > "vale_output_${file//\//_}_edit.md"
          done
          echo "Vale outputs:"
          ls -l

      - name: Run Reviewdog with Vale
        if: success()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
        run: |
          for file in $(find . -name "vale_output_*.json"); do
            reviewdog -reporter=github-pr-review -name="Vale" -level=warning -filter-mode=nofilter < $file
          done
