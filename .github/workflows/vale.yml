name: Vale Lint

on:
  pull_request:
    paths:
      - '**/*.md'

jobs:
  vale:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history so we can access all commits

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get changed files
      id: changed-files
      run: |
        BASE_SHA=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
        CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }} -- '*.md')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        echo "::set-output name=files::$(echo $CHANGED_FILES | jq -R -s -c 'split("\n")[:-1]')"

    - name: Print Changed Files
      run: echo $CHANGED_FILES

    - name: Install Vale
      run: curl -fsSL https://install.goreleaser.com/github.com/errata-ai/vale.sh | sh

    - name: Install Reviewdog
      run: |
        curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

    - name: Run Vale and Reviewdog on Changed Files
      run: |
        for file in $CHANGED_FILES; do
          /home/runner/vale --output=JSON $file > vale_output.json
          jq --arg file "$file" '[.[$file][] | .file = $file]' vale_output.json | jq -c '.' > rdjson_output.json
          cat rdjson_output.json
          /home/runner/reviewdog -f=rdjson -name="Vale" -reporter=github-pr-review -level=warning -filter-mode=nofilter < rdjson_output.json
        done
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.SNIPPET_VALIDATION }}

    - name: Install Reviewdog Suggestion Action
      uses: reviewdog/action-suggester@v1
      with:
        github_token: ${{ secrets.SNIPPET_VALIDATION }}

    - name: Run Reviewdog Suggestion
      run: |
        git diff > diff_output.txt
        reviewdog -f=diff -f.diff.strip=1 -reporter=github-pr-review < diff_output.txt
