name: Lint and suggest

on:
  pull_request:
    paths:
      - '**/*.md'

jobs:
  vale: # Combined Vale linting and suggestion job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history so we can access all commits

    - name: Install Vale
      uses: errata-ai/vale-action@v2

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get changed files
      id: changed-files
      run: |
        BASE_SHA=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
        CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }} -- '*.md')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        echo "CHANGED_FILES=$(echo $CHANGED_FILES | jq -R -s -c 'split(\"\n\")[:-1]')" >> $GITHUB_ENV

    - name: Print Changed Files
      run: echo $CHANGED_FILES

    - name: Run Vale on changed files
      run: |
        for file in ${{ env.CHANGED_FILES }}; do
          echo "Running Vale on $file"
          vale --output=JSON $file > "vale_output_${file//\//_}.json"
          vale --output=edit $file > "vale_output_${file//\//_}_edit.md"
        done
        echo "Vale outputs:"
        ls -l

    - name: Apply Vale edits and save originals
      run: |
        mkdir -p original_files
        mkdir -p corrected_files
        for file in ${{ env.CHANGED_FILES }}; do
          echo "Copying $file to original_files/${file//\//_}.original"
          cp "$file" "original_files/${file//\//_}.original"
          echo "Copying vale_output_${file//\//_}_edit.md to corrected_files/${file//\//_}"
          cp "vale_output_${file//\//_}_edit.md" "corrected_files/${file//\//_}"
        done
        echo "Original files:"
        ls -l original_files
        echo "Corrected files:"
        ls -l corrected_files

    - name: Run Reviewdog Suggestion Action
      uses: reviewdog/action-suggester@v1
      with:
        github_token: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
        tool_name: Vale
        level: "warning"
        filter_mode: "diff_context"
        fail_on_error: "false"
        reviewdog_flags: ""
        cleanup: "true"

    - name: Run Reviewdog with corrected files
      run: |
        for file in original_files/*.original; do
          original="$file"
          corrected="corrected_files/$(basename "$file" .original)"
          diff_output=$(diff -u "$original" "$corrected")
          if [[ -n "$diff_output" ]]; then
            echo "$diff_output" | reviewdog -f=diff -name="Vale" -reporter=github-pr-review -level=warning -filter-mode=nofilter
          fi
        done
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
